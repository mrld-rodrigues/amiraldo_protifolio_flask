# Opções de Procfile para diferentes configurações

# Opção 1 (ATUAL): Usando app:app diretamente (app/__init__.py tem variável app)
web: gunicorn app:app --bind 0.0.0.0:$PORT --workers 1 --timeout 120 --max-requests 1000

# Opção 2: Usando application.py (backup)
web: gunicorn application:app --bind 0.0.0.0:$PORT --workers 1 --timeout 120 --max-requests 1000

# Opção 3: Usando wsgi.py
web: gunicorn wsgi:app --bind 0.0.0.0:$PORT --workers 1 --timeout 120 --max-requests 1000

# Opção 4: Usando deploy/flask_app.py
web: gunicorn deploy.flask_app:app --bind 0.0.0.0:$PORT --workers 1 --timeout 120

# Opção 5: Com mais workers (para produção)
web: gunicorn app:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120 --max-requests 1000 --preload

# Opção 6: Usando Python diretamente
web: python application.py

# SOLUÇÃO ATUAL: Adicionado 'app = create_app()' no final de app/__init__.py
# Isso permite que 'from app import app' funcione, resolvendo o erro
# "module 'app' has no attribute 'app'" que o Render estava enfrentando.
